[{"/Users/takagiyosuke/TwitterClone/web/src/index.tsx":"1","/Users/takagiyosuke/TwitterClone/web/src/reportWebVitals.ts":"2","/Users/takagiyosuke/TwitterClone/web/src/Router.tsx":"3","/Users/takagiyosuke/TwitterClone/web/src/pages/Top.tsx":"4","/Users/takagiyosuke/TwitterClone/web/src/plugins/setting.js":"5","/Users/takagiyosuke/TwitterClone/web/src/pages/Profile.tsx":"6","/Users/takagiyosuke/TwitterClone/web/src/pages/Home.tsx":"7","/Users/takagiyosuke/TwitterClone/web/src/pages/Login.tsx":"8","/Users/takagiyosuke/TwitterClone/web/src/pages/Signup.tsx":"9","/Users/takagiyosuke/TwitterClone/web/src/templates/Login.tsx":"10","/Users/takagiyosuke/TwitterClone/web/src/templates/Signup.tsx":"11","/Users/takagiyosuke/TwitterClone/web/src/templates/Top.tsx":"12"},{"size":502,"mtime":1609303118485,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1609656491802,"results":"15","hashOfConfig":"14"},{"size":821,"mtime":1609836711468,"results":"16","hashOfConfig":"14"},{"size":1396,"mtime":1610002568676,"results":"17","hashOfConfig":"14"},{"size":240,"mtime":1609738606711,"results":"18","hashOfConfig":"14"},{"size":174,"mtime":1609835477565,"results":"19","hashOfConfig":"14"},{"size":134,"mtime":1609899940755,"results":"20","hashOfConfig":"14"},{"size":1540,"mtime":1609916549665,"results":"21","hashOfConfig":"14"},{"size":1724,"mtime":1609899679087,"results":"22","hashOfConfig":"14"},{"size":1941,"mtime":1609916447637,"results":"23","hashOfConfig":"14"},{"size":2342,"mtime":1609899708880,"results":"24","hashOfConfig":"14"},{"size":3453,"mtime":1610002504692,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ak2uah",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/takagiyosuke/TwitterClone/web/src/index.tsx",[],["56","57"],"/Users/takagiyosuke/TwitterClone/web/src/reportWebVitals.ts",[],"/Users/takagiyosuke/TwitterClone/web/src/Router.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/Top.tsx",["58","59","60"],"/Users/takagiyosuke/TwitterClone/web/src/plugins/setting.js",[],["61","62"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Profile.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/Home.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/Login.tsx",["63"],"import * as React from 'react'\n// import styled from 'styled-components'\nimport * as Login from '../templates/Login'\nimport * as Formik from 'formik'\nimport * as Yup from 'yup'\nimport axios from 'axios'\n\ntype loginData = {\n    username:string,\n    password:string\n}\n\nexport const Component = () => {\n  const formik = Formik.useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: async (values: any) => {\n      const loginData:loginData = {\n        username:values.username,\n        password:values.password,\n    }\n      const params = new URLSearchParams()\n      params.append('username', loginData.username)\n      params.append('password', loginData.password)\n      const res = await axios.post('http://localhost:2001/login', params)\n    //   if (!res.data?.login) {\n    //     alert('パスワードが違います。')\n    //     return\n    //   }\n    //   window.location.reload()\n    },\n    validationSchema: () => {\n      return Yup.object().shape({\n        username: Yup.string().required('入力してください。'),\n        password: Yup.string().required('入力してください。')\n      })\n    },\n    enableReinitialize: true\n  })\n  const usernameField: string = React.useMemo(() => formik.values.username, [formik])\n  const passwordField = React.useMemo(() => formik.values.password, [formik])\n  return (\n    <Login.Component\n      username={usernameField}\n      password={passwordField}\n      handleChange={formik.handleChange}\n      handleSubmit={formik.handleSubmit}\n    />\n  )\n}\n","/Users/takagiyosuke/TwitterClone/web/src/pages/Signup.tsx",["64"],"import * as React from 'react'\nimport * as Signup from '../templates/Signup'\nimport * as Formik from 'formik'\nimport * as Yup from 'yup'\nimport axios from 'axios'\n\ntype userData = {\n    username:string,\n    email:string,\n    password:string\n}\n\nexport const Component = () => {\n  const formik = Formik.useFormik({\n    initialValues: {\n      username:'',\n      email: '',\n      password: ''\n    },\n    onSubmit: async (values: any) => {\n      const userData:userData = {\n        username:values.username,\n        email:values.email,\n        password:values.password,\n    }\n      const params = new URLSearchParams()\n      params.append('username', userData.username)\n      params.append('email', userData.email)\n      params.append('password', userData.password)\n      const res = await axios.post('http://localhost:2001/createUser', params)\n    },\n    validationSchema: () => {\n      return Yup.object().shape({\n        username: Yup.string().required('入力してください。'),\n        email: Yup.string()\n          .email('有効なメールアドレスを入力してください。')\n          .required('入力してください。'),\n        password: Yup.string().required('入力してください。')\n      })\n    },\n    enableReinitialize: true\n  })\n  const usernameField: string = React.useMemo(() => formik.values.username, [formik])\n  const emailField: string = React.useMemo(() => formik.values.email, [formik])\n  const passwordField = React.useMemo(() => formik.values.password, [formik])\n  return (\n    <Signup.Component\n      username={usernameField}\n      email={emailField}\n      password={passwordField}\n      handleChange={formik.handleChange}\n      handleSubmit={formik.handleSubmit}\n    />\n  )\n}\n","/Users/takagiyosuke/TwitterClone/web/src/templates/Login.tsx",["65"],"import * as React from 'react'\nimport styled from 'styled-components'\nimport logo from \"../assets/logo.svg\"\n\ntype Props ={\n    username:string,\n    password:string,\n\n    handleChange: (eventOrPath: string | React.ChangeEvent<any>) => void\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void\n}\n\nconst nothingDo = ()=>{}\nexport const Component = (props:Props) => {\n    return (\n        <Wrap>\n            <Contents>\n                <Logo src={logo} />\n                <Text>Twitterにログイン</Text>\n                <form onSubmit={props.handleSubmit}>\n                    <FullInput\n                        type='text'\n                        name='username'\n                        placeholder='ユーザーネーム'\n                        value={props.username}\n                        onChange={props.handleChange}\n                    />\n                    <FullInput\n                        type='password'\n                        name='password'\n                        placeholder='パスワード'\n                        onChange={props.handleChange}\n                    />\n                    <LoginButton>ログイン</LoginButton>\n                </form>\n            </Contents>\n        </Wrap>\n    )\n}\n\nconst Text = styled.div`\nmargin:10px 0;\nfont-size:19px;\nfont-weight:bold;\n`\n\nconst Wrap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n    flex-direction: column;\n    height: 100vh;\n`\n\nconst Contents = styled.div`\n    max-width: 620px;\n`\nconst Logo = styled.img`\n    width: 50px;\n    height: 50px;\n`\n\nconst FullInput = styled.input`\npadding:5px;\nmargin-bottom:14px;\nfont-size:19px;\n    width: 100%;\n    box-sizing: border-box;\n`\n\nconst LoginButton = styled.button`\nborder: none;\nborder-radius:9999px;\noutline: none;\nwidth:100%;\nheight:37px;\ncolor:white;\nbackground-color:#1da1f2;\nfont-weight:bold;\nfont-size:15px;\ndisplay: block;\n`\n","/Users/takagiyosuke/TwitterClone/web/src/templates/Signup.tsx",["66"],"import * as React from 'react'\nimport styled from 'styled-components'\nimport logo from \"../assets/logo.svg\"\n\ntype Props ={\n    username:string\n    email:string,\n    password:string,\n\n    handleChange: (eventOrPath: string | React.ChangeEvent<any>) => void\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void\n}\n\nconst nothingDo = ()=>{}\nexport const Component = (props:Props) => {\n    return (\n        <Wrap>\n            <Contents>\n                <Logo src={logo} />\n                <Text>アカウントを作成</Text>\n                <form onSubmit={props.handleSubmit}>\n                    <FullInput\n                        type='text'\n                        name='username'\n                        placeholder='名前'\n                        value={props.username}\n                        onChange={props.handleChange}\n                    />\n                    <FullInput\n                        type='email'\n                        name='email'\n                        placeholder='メールアドレス'\n                        value={props.email}\n                        onChange={props.handleChange}\n                    />\n                    <FullInput\n                        type='password'\n                        name='password'\n                        placeholder='パスワード'\n                        value={props.password}\n                        onChange={props.handleChange}\n                    />\n                    <LoginButton>会員登録</LoginButton>\n                </form>\n            </Contents>\n        </Wrap>\n    )\n}\n\nconst Text = styled.div`\n    margin:10px 0;\n    font-size:19px;\n    font-weight:bold;\n`\n\nconst Wrap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n    flex-direction: column;\n    height: 100vh;\n`\n\nconst Contents = styled.div`\n    max-width: 620px;\n`\nconst Logo = styled.img`\n    width: 50px;\n    height: 50px;\n`\n\nconst FullInput = styled.input`\n    padding:5px;\n    margin-bottom:14px;\n    font-size:19px;\n    width: 100%;\n    box-sizing: border-box;\n`\n\nconst LoginButton = styled.button`\n    border: none;\n    border-radius:9999px;\n    outline: none;\n    width:100%;\n    height:37px;\n    color:white;\n    background-color:#1da1f2;\n    font-weight:bold;\n    font-size:15px;\n    display: block;\n`\n","/Users/takagiyosuke/TwitterClone/web/src/templates/Top.tsx",["67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":30},{"ruleId":"72","severity":1,"message":"76","line":19,"column":13,"nodeType":"74","messageId":"75","endLine":19,"endColumn":16},{"ruleId":"72","severity":1,"message":"77","line":29,"column":18,"nodeType":"74","messageId":"75","endLine":29,"endColumn":27},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"76","line":27,"column":13,"nodeType":"74","messageId":"75","endLine":27,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":30,"column":13,"nodeType":"74","messageId":"75","endLine":30,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":13,"column":7,"nodeType":"74","messageId":"75","endLine":13,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":14,"column":7,"nodeType":"74","messageId":"75","endLine":14,"endColumn":16},{"ruleId":"72","severity":1,"message":"79","line":142,"column":7,"nodeType":"74","messageId":"75","endLine":142,"endColumn":19},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'AxiosResponse' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'setTweets' is assigned a value but never used.","'nothingDo' is assigned a value but never used.","'FollowButton' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]