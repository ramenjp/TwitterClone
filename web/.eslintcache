[{"/Users/takagiyosuke/TwitterClone/web/src/index.tsx":"1","/Users/takagiyosuke/TwitterClone/web/src/Router.tsx":"2","/Users/takagiyosuke/TwitterClone/web/src/pages/Top.tsx":"3","/Users/takagiyosuke/TwitterClone/web/src/plugins/setting.js":"4","/Users/takagiyosuke/TwitterClone/web/src/pages/Profile.tsx":"5","/Users/takagiyosuke/TwitterClone/web/src/pages/Home.tsx":"6","/Users/takagiyosuke/TwitterClone/web/src/pages/Login.tsx":"7","/Users/takagiyosuke/TwitterClone/web/src/pages/Signup.tsx":"8","/Users/takagiyosuke/TwitterClone/web/src/templates/Login.tsx":"9","/Users/takagiyosuke/TwitterClone/web/src/templates/Signup.tsx":"10","/Users/takagiyosuke/TwitterClone/web/src/templates/Top.tsx":"11","/Users/takagiyosuke/TwitterClone/web/src/Auth.tsx":"12","/Users/takagiyosuke/TwitterClone/web/src/components/Tweet.tsx":"13","/Users/takagiyosuke/TwitterClone/web/src/templates/Profile.tsx":"14","/Users/takagiyosuke/TwitterClone/web/src/components/FollowButton.tsx":"15","/Users/takagiyosuke/TwitterClone/web/src/templates/OtherProfile.tsx":"16","/Users/takagiyosuke/TwitterClone/web/src/components/Text.tsx":"17","/Users/takagiyosuke/TwitterClone/web/src/pages/UserInfo.tsx":"18","/Users/takagiyosuke/TwitterClone/web/src/pages/OtherProfile.tsx":"19","/Users/takagiyosuke/TwitterClone/web/src/templates/UserInfo.tsx":"20"},{"size":472,"mtime":1610435316478,"results":"21","hashOfConfig":"22"},{"size":902,"mtime":1610562414917,"results":"23","hashOfConfig":"22"},{"size":2395,"mtime":1610560526902,"results":"24","hashOfConfig":"22"},{"size":240,"mtime":1609738606711,"results":"25","hashOfConfig":"22"},{"size":3131,"mtime":1610626415850,"results":"26","hashOfConfig":"22"},{"size":134,"mtime":1609899940755,"results":"27","hashOfConfig":"22"},{"size":1738,"mtime":1610560886652,"results":"28","hashOfConfig":"22"},{"size":1948,"mtime":1610560505746,"results":"29","hashOfConfig":"22"},{"size":2311,"mtime":1610560531580,"results":"30","hashOfConfig":"22"},{"size":2342,"mtime":1610604620642,"results":"31","hashOfConfig":"22"},{"size":3920,"mtime":1610589704557,"results":"32","hashOfConfig":"22"},{"size":446,"mtime":1610554051210,"results":"33","hashOfConfig":"22"},{"size":3040,"mtime":1610560612854,"results":"34","hashOfConfig":"22"},{"size":5066,"mtime":1610623664956,"results":"35","hashOfConfig":"22"},{"size":1912,"mtime":1610554066894,"results":"36","hashOfConfig":"22"},{"size":2545,"mtime":1610626754882,"results":"37","hashOfConfig":"22"},{"size":286,"mtime":1610554671631,"results":"38","hashOfConfig":"22"},{"size":1072,"mtime":1610592109014,"results":"39","hashOfConfig":"22"},{"size":1019,"mtime":1610626647523,"results":"40","hashOfConfig":"22"},{"size":464,"mtime":1610625795526,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ak2uah",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/takagiyosuke/TwitterClone/web/src/index.tsx",[],["92","93"],"/Users/takagiyosuke/TwitterClone/web/src/Router.tsx",["94"],"import * as React from 'react'\nimport * as ReactRouter from 'react-router-dom'\n\nimport * as Top from './pages/Top'\nimport * as Profile from './pages/Profile'\nimport * as Login from './pages/Login'\nimport * as Signup from './pages/Signup'\nimport * as UserInfo from './pages/UserInfo'\nimport * as Auth from './Auth'\n\nexport const Component = () => {\n    const history = ReactRouter.useHistory()\n  return (\n    <ReactRouter.BrowserRouter>\n      <ReactRouter.Switch>\n      <ReactRouter.Route exact path='/' component={Auth.Component} />\n      <ReactRouter.Route path='/login' component={Login.Component} />\n      <ReactRouter.Route path='/signup' component={Signup.Component} history= {history} />\n      <ReactRouter.Route path='/top' component={Top.Component} />\n      <ReactRouter.Route path='/:userId' component={UserInfo.Component} />\n      </ReactRouter.Switch>\n    </ReactRouter.BrowserRouter>\n  )\n}\n","/Users/takagiyosuke/TwitterClone/web/src/pages/Top.tsx",["95","96"],"import * as React from 'react'\nimport axios from 'axios'\nimport * as Formik from 'formik'\nimport * as Yup from 'yup'\nimport * as ReactRouter from 'react-router-dom'\nimport '../plugins/setting.js'\n\nimport * as Top from '../templates/Top'\nimport * as Interface from '../interface/interface'\n\nexport const Component = () => {\n  const history = ReactRouter.useHistory()\n  const formik = Formik.useFormik({\n    initialValues: {\n      content: ''\n    },\n    onSubmit: async values => {\n      const params = new URLSearchParams()\n      const content: string = values.content\n      params.append('content', content)\n      await axios\n        .post('http://localhost:2001/createTweet', params, {\n          withCredentials: true\n        })\n        .then(() => {\n          values.content = ''\n          window.location.reload()\n        })\n    },\n    validationSchema: () => {\n      return Yup.object().shape({\n        content: Yup.string().required('入力してください')\n      })\n    },\n    enableReinitialize: true\n  })\n\n  const [users, setUsers] = React.useState<Interface.User[]>([])\n  const [tweets, setTweets] = React.useState<Interface.Tweet[]>([])\n  const [user, setUser] = React.useState<Interface.User>({\n    ID: 0,\n    Name: \"\",\n    UserName: \"\",\n    Bio: \"\",\n    Email: \"\",\n    Password:\"\",\n    Profile_img: \"\"\n  })\n\n  const logout = async () => {\n    try {\n      const res = await axios.get('http://localhost:2001/logout', {\n        withCredentials: true\n      })\n      history.replace('/')\n    } catch (error) {\n      return\n    }\n  }\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get('http://localhost:2001/top', {\n          withCredentials: true\n        })\n        // TODO: フォローしてるユーザーのみツイートをとってくる\n        console.log(\"res.data.Tweets\",res.data.Tweets)\n        setUser(res.data.LoginUser)\n        setUsers(res.data.Users)\n        setTweets(res.data.Tweets)\n      } catch (error) {\n        history.replace('/')\n      }\n    }\n    fetchData()\n  }, [])\n\n  const contentField: string = React.useMemo(() => formik.values.content, [\n    formik\n  ])\n  return (\n    <Top.Component\n      user={user}\n      users={users}\n      tweets={tweets}\n      content={contentField}\n      logout={logout}\n      handleChange={formik.handleChange}\n      handleSubmit={formik.handleSubmit}\n    />\n  )\n}\n","/Users/takagiyosuke/TwitterClone/web/src/plugins/setting.js",[],["97","98"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Profile.tsx",["99","100","101"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Home.tsx",[],["102","103"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Login.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/Signup.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/templates/Login.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/templates/Signup.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/templates/Top.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/Auth.tsx",["104"],"import * as React from 'react'\nimport axios from 'axios'\n\nimport * as Login from './pages/Login'\nimport * as Top from './pages/Top'\n\nexport const Component = () => {\n  const [isLogin, setIsLogin] = React.useState(false)\n  const res = async () => {\n    axios.get('http://localhost:2001/').then(res => {\n      const isLogin = res.data\n      setIsLogin(isLogin)\n    })\n  }\n\n  return <div> {isLogin ? <Top.Component /> : <Login.Component />}</div>\n}\n","/Users/takagiyosuke/TwitterClone/web/src/components/Tweet.tsx",["105","106","107","108","109"],"import * as React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport heart from '../assets/heart.svg'\nimport pushedHeart from '../assets/pushedHeart.svg'\nimport retweet from '../assets/retweet.svg'\nimport pushedRetweet from '../assets/pushedRetweet.svg'\n\ntype Props = {\n  tweet: string\n  date?: any\n  id?: any\n}\n\ntype Tweet = {\n    content:string\n    date?:any\n    id?:any\n}\n\nexport const Component = (props: Props) => {\n  const { tweet, date, id } = props\n  const [like, setLike] = React.useState(false)\n  const [reTweet, setReTweet] = React.useState(false)\n\n  const toggleLike = async () => {\n    const tweetId = id\n    const params = new URLSearchParams()\n    params.append('tweetId', tweetId)\n    if (!like) {\n      try {\n        const res = await axios.post('http://localhost:2001/like', params, {\n          withCredentials: true\n        })\n        setLike(!like)\n      } catch (error) {\n        return\n      }\n    } else {\n      try {\n        const res = await axios.post('http://localhost:2001/dislike', params, {\n          withCredentials: true\n        })\n        setLike(!like)\n      } catch (error) {\n        return\n      }\n    }\n  }\n\n  const toggleReTweet = async () => {\n    const tweetId = id\n    const params = new URLSearchParams()\n    params.append('tweetId', tweetId)\n    if (!reTweet) {\n      try {\n        const params = new URLSearchParams()\n        params.append('test', 'test')\n        const res = await axios.post('http://localhost:2001/reTweet', params, {\n          withCredentials: true\n        })\n        setReTweet(!reTweet)\n      } catch (error) {\n        console.log('error')\n        return\n      }\n    } else {\n      try {\n        const params = new URLSearchParams()\n        params.append('test', 'test')\n        const res = await axios.post(\n          'http://localhost:2001/deleteReTweet',\n          params,\n          {\n            withCredentials: true\n          }\n        )\n        setReTweet(!reTweet)\n      } catch (error) {\n        return\n      }\n    }\n  }\n\n  return (\n    <Tweet>\n      {tweet}\n      <Date>\n        {date}\n      </Date>\n      <Share>\n        <LikeWrapper onClick={toggleLike}>\n          {like ? <Like src={pushedHeart} /> : <Like src={heart} />}\n        </LikeWrapper>\n        <ReTweetWrapper onClick={toggleReTweet}>\n          {reTweet ? (\n            <ReTweet src={pushedRetweet} />\n          ) : (\n            <ReTweet src={retweet} />\n          )}\n        </ReTweetWrapper>\n      </Share>\n    </Tweet>\n  )\n}\n\nconst Tweet = styled.div`\n  border-bottom: 1px solid #a0a0a0;\n  font-size: 15px;\n  padding: 20px 0 20px 50px;\n  text-align: left;\n  display: column;\n`\n\nconst Share = styled.div`\n  padding-top: 10px;\n  display: flex;\n`\n\nconst ReTweet = styled.img`\n  width: 19px;\n  height: 19px;\n`\n\nconst Like = styled.img`\n  width: 19px;\n  height: 19px;\n  margin-right: 30px;\n`\n\nconst LikeWrapper = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst ReTweetWrapper = styled.div`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst Date = styled.div`\n\n`\n","/Users/takagiyosuke/TwitterClone/web/src/templates/Profile.tsx",["110","111"],"import * as React from 'react'\nimport * as ReactRouter from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport * as Tweet from '../components/Tweet'\nimport * as Text from '../components/Text'\ntype Props = {\n  user?: any\n  tweet?: any\n  username: string\n  name: string\n  bio: string\n//   image: any\n\n  handleChange: (eventOrPath: string | React.ChangeEvent<any>) => void\n  handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void\n}\n\nexport const Component = (props: Props) => {\n  const { tweet, user ,name,username,bio} = props\n  const [content, setContent] = React.useState(true)\n  const [isEdit, setIsEdit] = React.useState(true)\n  \n  const renderTweet = () => {\n    const tweetKeyList = Object.keys(tweet)\n    return tweetKeyList.map(key => {\n      return <Tweet.Component key={key} tweet={tweet[key].Content} />\n    })\n  }\n  const toggleTweetContent = () => {\n    setContent(true)\n  }\n  const toggleLikeContent = () => {\n    setContent(false)\n  }\n  const toggleEdit = () => {\n    setIsEdit(!isEdit)\n  }\n\n//   const onFileChange= (e:any) => {\n//     const files = e.target.files\n//     if(files.length > 0) {\n//         var file = files[0]\n//         var reader = new FileReader()\n//         reader.onload = (e) => {\n//             if(e.target.result){\n//                 setFileName(e.target.result)\n//             }\n//         };\n//         reader.readAsDataURL(file)\n//     }\n// }\n  \n  return (\n    <Wrapper>\n      <StyledLink>\n        <ReactRouter.Link to='/top'>\n          <Text.Component text='ホームに戻る' />\n        </ReactRouter.Link>\n      </StyledLink>\n      <EditButton onClick={toggleEdit}>プロフィールを編集</EditButton>\n      {isEdit ? (\n        <div>\n          <ProfileWrapper>\n            <Name>{user.Name}</Name>\n            <UserName>@{user.UserName}</UserName>\n            <Bio>{user.Bio}</Bio>\n          </ProfileWrapper>\n          <Menu>\n            <MenuItem onClick={toggleTweetContent}>ツイート</MenuItem>\n            <MenuItem onClick={toggleLikeContent}>いいね</MenuItem>\n          </Menu>\n          <DisplayContent>\n            {content ? <ul>{renderTweet()}</ul> : <div>like</div>}\n          </DisplayContent>\n        </div>\n      ) : (\n        <div>\n          <form onSubmit={props.handleSubmit}>\n            <Text.Component text='名前' />\n            <FullInput\n              type='text'\n              name='name'\n              placeholder='名前'\n              value={name}\n              onChange={props.handleChange}\n            />\n            <Text.Component text='ユーザネーム' />\n            <FullInput\n              type='text'\n              name='username'\n              placeholder='ユーザーネーム'\n              value={username}\n              onChange={props.handleChange}\n            />\n            <Text.Component text='自己紹介' />\n            <FullInputArea\n              name='bio'\n              placeholder='自己紹介'\n              value={bio}\n              onChange={props.handleChange}\n            />\n            {/* <input\n              id=\"profile_image\"\n              name=\"image\"\n              type='file'\n              accept='.png, .jpg, .jpeg'\n              value={image}\n              onChange={e =>onFileChange(e) }\n            />\n            <img src={!image ? filename : image} /> */}\n            <LoginButton>編集完了</LoginButton>\n          </form>\n        </div>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  padding: 40px;\n  width: 40%;\n  margin: 0 auto;\n`\n\nconst ProfileWrapper = styled.div`\n  padding: 15px;\n`\n\nconst Name = styled.div`\n  font-weight: bold;\n  font-size: 19px;\n`\n\nconst Menu = styled.div`\n  display: flex;\n`\n\nconst Bio = styled.div`\n  font-size: 15px;\n`\n\nconst MenuItem = styled.div`\n  font-weight: bold;\n  width: 50%;\n  text-align: center;\n  padding: 15px;\n  &:hover {\n    cursor: pointer;\n    color: #1da1f2;\n  }\n`\n\nconst DisplayContent = styled.div``\n\nconst EditButton = styled.button`\n  border-color: #1da1f2;\n  border-width: 1px;\n  border-radius: 9999px;\n  outline: none;\n  width: 167px;\n  height: 40px;\n  color: #1da1f2;\n  background-color: white;\n  font-weight: bold;\n  font-size: 15px;\n  display: block;\n  margin: 0 0 0 auto;\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst FullInput = styled.input`\n  padding: 5px;\n  margin-bottom: 14px;\n  font-size: 19px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst FullInputArea = styled.textarea`\n  padding: 15px;\n  margin-bottom: 14px;\n  font-size: 19px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst LoginButton = styled.button`\n  border: none;\n  border-radius: 9999px;\n  outline: none;\n  width: 100%;\n  height: 37px;\n  color: white;\n  background-color: #1da1f2;\n  font-weight: bold;\n  font-size: 15px;\n  display: block;\n  margin-bottom: 30px;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst UserName = styled.div`\n  color: #5b7083;\n  font-size: 15px;\n  margin-bottom: 10px;\n`\n\nconst StyledLink = styled.div`\n  a {\n    text-decoration: none;\n    color: black;\n    &:hover {\n      color: #1da1f2;\n    }\n  }\n`\n","/Users/takagiyosuke/TwitterClone/web/src/components/FollowButton.tsx",["112","113"],"import * as React from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\ntype Props = {\n  userId: any\n}\n\nexport const Component = (props: Props) => {\n  const { userId } = props\n  const [isFollow, setIsFollow] = React.useState(false)\n  const toggleFollowUser = async () => {\n    const params = new URLSearchParams()\n    params.append('userId', userId)\n    if (!isFollow) {\n      try {\n        const response = await axios.post(\n          'http://localhost:2001/follow',\n          params,\n          {\n            withCredentials: true\n          }\n        )\n        setIsFollow(true)\n      } catch (error) {\n        return\n      }\n    } else {\n      try {\n        const response = await axios.post(\n          'http://localhost:2001/unfollow',\n          params,\n          {\n            withCredentials: true\n          }\n        )\n        setIsFollow(false)\n      } catch (error) {\n        return\n      }\n    }\n  }\n\n  return (\n    <ButtonWrapper>\n      {isFollow ? (\n        <UnFollowButton onClick={toggleFollowUser}>\n          フォローを外す\n        </UnFollowButton>\n      ) : (\n        <FollowButton onClick={toggleFollowUser}>フォローする</FollowButton>\n      )}\n    </ButtonWrapper>\n  )\n}\n\nconst ButtonWrapper = styled.div`\n  margin: 0 0 0 auto;\n`\n\nconst FollowButton = styled.button`\n  border: none;\n  border-radius: 9999px;\n  outline: none;\n  width: 140px;\n  height: 30px;\n  color: white;\n  background-color: #1da1f2;\n  font-weight: bold;\n  font-size: 15px;\n  display: block;\n\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst UnFollowButton = styled.button`\n  border: solid 1px #1da1f2;\n  border-radius: 9999px;\n  outline: none;\n  width: 140px;\n  height: 30px;\n  color: #1da1f2;\n  background-color: white;\n  font-weight: bold;\n  font-size: 15px;\n  display: block;\n  margin: 0 0 0 auto;\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`\n","/Users/takagiyosuke/TwitterClone/web/src/templates/OtherProfile.tsx",["114","115","116","117"],"/Users/takagiyosuke/TwitterClone/web/src/components/Text.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/UserInfo.tsx",["118"],"import * as React from 'react'\nimport axios from 'axios'\nimport * as ReactRouter from 'react-router-dom'\n\nimport * as UserInfo from '../templates/UserInfo'\n\ntype Props = {} & ReactRouter.RouteComponentProps<{ userId: string }>\n\nexport const Component = (props: Props) => {\n  const [isMyAccout, setIsMyAccout] = React.useState<boolean>(true)\n  const username:string = props.match.params.userId\n\n  React.useEffect(() => {\n      console.log(\"isMyAccout\",isMyAccout)\n    //自分のアカウントかどうか判定\n    judgeIsMyAccout()\n  }, [])\n\n\n  const judgeIsMyAccout = async () => {\n    const params = new URLSearchParams()\n    params.append('userId', username)\n    try {\n        const res = await axios.post(\n          'http://localhost:2001/judgeIsMyAccout',params,{\n            withCredentials: true\n        })\n        if (res.data === 'MyAccount') {\n            return setIsMyAccout(true)\n        } else {\n            return setIsMyAccout(false)\n        }\n    } catch(error) {\n\n    }\n  }\n\nreturn <UserInfo.Component isMyAccount={isMyAccout} username={username}/>\n}\n\n","/Users/takagiyosuke/TwitterClone/web/src/pages/OtherProfile.tsx",["119"],"/Users/takagiyosuke/TwitterClone/web/src/templates/UserInfo.tsx",["120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":5,"column":13,"nodeType":"128","messageId":"129","endLine":5,"endColumn":20},{"ruleId":"126","severity":1,"message":"130","line":51,"column":13,"nodeType":"128","messageId":"129","endLine":51,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":76,"column":6,"nodeType":"133","endLine":76,"endColumn":8,"suggestions":"134"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"135","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":14},{"ruleId":"126","severity":1,"message":"136","line":11,"column":15,"nodeType":"128","messageId":"129","endLine":11,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":41,"column":13,"nodeType":"128","messageId":"129","endLine":41,"endColumn":21},{"ruleId":"122","replacedBy":"138"},{"ruleId":"124","replacedBy":"139"},{"ruleId":"126","severity":1,"message":"130","line":9,"column":9,"nodeType":"128","messageId":"129","endLine":9,"endColumn":12},{"ruleId":"126","severity":1,"message":"130","line":33,"column":15,"nodeType":"128","messageId":"129","endLine":33,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":42,"column":15,"nodeType":"128","messageId":"129","endLine":42,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":60,"column":15,"nodeType":"128","messageId":"129","endLine":60,"endColumn":18},{"ruleId":"126","severity":1,"message":"130","line":72,"column":15,"nodeType":"128","messageId":"129","endLine":72,"endColumn":18},{"ruleId":"140","severity":1,"message":"141","line":108,"column":7,"nodeType":"128","messageId":"142","endLine":108,"endColumn":12},{"ruleId":"126","severity":1,"message":"143","line":23,"column":10,"nodeType":"128","messageId":"129","endLine":23,"endColumn":18},{"ruleId":"126","severity":1,"message":"144","line":23,"column":20,"nodeType":"128","messageId":"129","endLine":23,"endColumn":31},{"ruleId":"126","severity":1,"message":"137","line":17,"column":15,"nodeType":"128","messageId":"129","endLine":17,"endColumn":23},{"ruleId":"126","severity":1,"message":"137","line":30,"column":15,"nodeType":"128","messageId":"129","endLine":30,"endColumn":23},{"ruleId":"126","severity":1,"message":"145","line":7,"column":13,"nodeType":"128","messageId":"129","endLine":7,"endColumn":22},{"ruleId":"126","severity":1,"message":"146","line":15,"column":10,"nodeType":"128","messageId":"129","endLine":15,"endColumn":17},{"ruleId":"126","severity":1,"message":"147","line":19,"column":9,"nodeType":"128","messageId":"129","endLine":19,"endColumn":20},{"ruleId":"126","severity":1,"message":"148","line":95,"column":7,"nodeType":"128","messageId":"129","endLine":95,"endColumn":18},{"ruleId":"131","severity":1,"message":"149","line":17,"column":6,"nodeType":"133","endLine":17,"endColumn":8,"suggestions":"150"},{"ruleId":"131","severity":1,"message":"151","line":24,"column":6,"nodeType":"133","endLine":24,"endColumn":8,"suggestions":"152"},{"ruleId":"126","severity":1,"message":"153","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":13},{"ruleId":"126","severity":1,"message":"154","line":3,"column":13,"nodeType":"128","messageId":"129","endLine":3,"endColumn":24},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'response' is assigned a value but never used.",["155"],["156"],"@typescript-eslint/no-redeclare","'Tweet' is already defined.","redeclared","'filename' is assigned a value but never used.","'setFileName' is assigned a value but never used.","'Interface' is defined but never used.","'content' is assigned a value but never used.","'renderTweet' is assigned a value but never used.","'LoginButton' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'isMyAccout' and 'judgeIsMyAccout'. Either include them or remove the dependency array.",["158"],"React Hook React.useEffect has a missing dependency: 'fetchUserData'. Either include it or remove the dependency array.",["159"],"'axios' is defined but never used.","'ReactRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [history]",{"range":"166","text":"167"},"Update the dependencies array to be: [isMyAccout, judgeIsMyAccout]",{"range":"168","text":"169"},"Update the dependencies array to be: [fetchUserData]",{"range":"170","text":"171"},[1999,2001],"[history]",[511,513],"[isMyAccout, judgeIsMyAccout]",[489,491],"[fetchUserData]"]