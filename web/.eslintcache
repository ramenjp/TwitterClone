[{"/Users/takagiyosuke/TwitterClone/web/src/index.tsx":"1","/Users/takagiyosuke/TwitterClone/web/src/reportWebVitals.ts":"2","/Users/takagiyosuke/TwitterClone/web/src/Router.tsx":"3","/Users/takagiyosuke/TwitterClone/web/src/pages/Top.tsx":"4","/Users/takagiyosuke/TwitterClone/web/src/plugins/setting.js":"5","/Users/takagiyosuke/TwitterClone/web/src/pages/Profile.tsx":"6","/Users/takagiyosuke/TwitterClone/web/src/pages/Home.tsx":"7","/Users/takagiyosuke/TwitterClone/web/src/pages/Login.tsx":"8","/Users/takagiyosuke/TwitterClone/web/src/pages/Signup.tsx":"9","/Users/takagiyosuke/TwitterClone/web/src/templates/Login.tsx":"10","/Users/takagiyosuke/TwitterClone/web/src/templates/Signup.tsx":"11","/Users/takagiyosuke/TwitterClone/web/src/templates/Top.tsx":"12","/Users/takagiyosuke/TwitterClone/web/src/Auth.tsx":"13","/Users/takagiyosuke/TwitterClone/web/src/components/Tweet.tsx":"14","/Users/takagiyosuke/TwitterClone/web/src/templates/Profile.tsx":"15"},{"size":472,"mtime":1610435316478,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609656491802,"results":"18","hashOfConfig":"17"},{"size":880,"mtime":1610435304851,"results":"19","hashOfConfig":"17"},{"size":2119,"mtime":1610369467987,"results":"20","hashOfConfig":"17"},{"size":240,"mtime":1609738606711,"results":"21","hashOfConfig":"17"},{"size":3084,"mtime":1610437371085,"results":"22","hashOfConfig":"17"},{"size":134,"mtime":1609899940755,"results":"23","hashOfConfig":"17"},{"size":1856,"mtime":1610435505599,"results":"24","hashOfConfig":"17"},{"size":1948,"mtime":1610096734175,"results":"25","hashOfConfig":"17"},{"size":2332,"mtime":1610435355311,"results":"26","hashOfConfig":"17"},{"size":2360,"mtime":1610435365936,"results":"27","hashOfConfig":"17"},{"size":4187,"mtime":1610461179092,"results":"28","hashOfConfig":"17"},{"size":551,"mtime":1610262888467,"results":"29","hashOfConfig":"17"},{"size":2543,"mtime":1610461156130,"results":"30","hashOfConfig":"17"},{"size":4780,"mtime":1610437333398,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ak2uah",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/takagiyosuke/TwitterClone/web/src/index.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/reportWebVitals.ts",[],["69","70"],"/Users/takagiyosuke/TwitterClone/web/src/Router.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/Top.tsx",["71","72"],"import * as React from 'react'\nimport axios from 'axios'\nimport '../plugins/setting.js'\nimport * as Formik from 'formik'\nimport * as Yup from 'yup'\nimport * as Top from '../templates/Top'\nimport * as ReactRouter from 'react-router-dom'\n\nexport const Component = () => {\n    const history = ReactRouter.useHistory()\n  const formik = Formik.useFormik({\n    initialValues: {\n      content: ''\n    },\n    onSubmit: async values => {\n      console.log('createTweet')\n      const params = new URLSearchParams()\n      const content: string = values.content\n      params.append('content', content)\n      console.log('params', params)\n      await axios.post('http://localhost:2001/createTweet', params,{\n          withCredentials:true\n      }).then(()=>{\n          values.content=\"\"\n          window.location.reload()\n      })\n    },\n    validationSchema: () => {\n      return Yup.object().shape({\n        content: Yup.string().required('入力してください')\n      })\n    },\n    enableReinitialize: true\n  })\n\n  const [tweets, setTweets] = React.useState([])\n  const [user,setUser] = React.useState([])\n  const [users, setUsers] = React.useState([])\n\n  const logout = async () => {\n    try {\n        const res = await axios.get('http://localhost:2001/logout',{\n            withCredentials:true\n        })\n        history.replace('/')\n    }catch (error){\n        return\n    }\n  }\n\n  React.useEffect(() => {\n      const fetchData = async () => {\n      console.log(\"fetchData\")\n      try {\n        const res = await axios.get('http://localhost:2001/top',{\n            withCredentials:true\n        })\n        setUser(res.data.LoginUser)\n        setUsers(res.data.Users);\n        setTweets(res.data.Tweets);\n      } catch( error ) {\n        history.replace('/')\n      }\n    }\n    fetchData()\n  }, [])\n\n  const contentField:string = React.useMemo(() => formik.values.content, [formik])\n  return (\n      <Top.Component\n      user={user}\n      users={users}\n      tweets={tweets}\n      content={contentField}\n\n      logout={logout}\n      handleChange={formik.handleChange}\n      handleSubmit={formik.handleSubmit}\n      />\n  )\n}\n\n",["73","74"],"/Users/takagiyosuke/TwitterClone/web/src/plugins/setting.js",[],["75","76"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Profile.tsx",["77"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Home.tsx",[],["78","79"],"/Users/takagiyosuke/TwitterClone/web/src/pages/Login.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/pages/Signup.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/templates/Login.tsx",["80"],"import * as React from 'react'\nimport styled from 'styled-components'\nimport * as ReactRouter from 'react-router-dom'\n\nimport logo from \"../assets/logo.svg\"\n\n\ntype Props ={\n    username:string,\n    password:string,\n\n    handleChange: (eventOrPath: string | React.ChangeEvent<any>) => void\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void\n}\n\nexport const Component = (props:Props) => {\n    return (\n        <Wrap>\n            <Contents>\n                <Logo src={logo} />\n                <Text>Twitterにログイン</Text>\n                <form onSubmit={props.handleSubmit}>\n                    <FullInput\n                        type='text'\n                        name='username'\n                        placeholder='ユーザーネーム'\n                        value={props.username}\n                        onChange={props.handleChange}\n                    />\n                    <FullInput\n                        type='password'\n                        name='password'\n                        placeholder='パスワード'\n                        onChange={props.handleChange}\n                    />\n                    <LoginButton>ログイン</LoginButton>\n                </form>\n            <StyledLink>\n            <ReactRouter.Link to=\"signup\">\n                <LoginButton>会員登録</LoginButton>\n            </ReactRouter.Link>\n            </StyledLink>\n            </Contents>\n        </Wrap>\n    )\n}\n\nconst Text = styled.div`\nmargin:10px 0;\nfont-size:19px;\nfont-weight:bold;\n`\n\nconst Wrap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align:center;\n    flex-direction: column;\n    height: 100vh;\n`\n\nconst Contents = styled.div`\n    max-width: 620px;\n`\nconst Logo = styled.img`\n    width: 50px;\n    height: 50px;\n`\n\nconst FullInput = styled.input`\npadding:5px;\nmargin-bottom:14px;\nfont-size:19px;\n    width: 100%;\n    box-sizing: border-box;\n`\n\nconst LoginButton = styled.button`\nborder: none;\nborder-radius:9999px;\noutline: none;\nwidth:100%;\nheight:37px;\ncolor:white;\nbackground-color:#1da1f2;\nfont-weight:bold;\nfont-size:15px;\ndisplay: block;\nmargin-bottom:30px;\n&:hover {\n    cursor:pointer\n}\n`\n\nconst StyledLink = styled.div`\n  a {\n    text-decoration: none;\n    color: black;\n    &:hover {\n        color: #1da1f2;\n    }\n  }\n` ","/Users/takagiyosuke/TwitterClone/web/src/templates/Signup.tsx",[],"/Users/takagiyosuke/TwitterClone/web/src/templates/Top.tsx",["81"],"/Users/takagiyosuke/TwitterClone/web/src/Auth.tsx",["82"],"import * as React from 'react'\nimport axios from 'axios'\n\nimport * as Login from './pages/Login'\nimport * as Top from './pages/Top'\n\nexport const Component = () => {\n  console.log(\"Auth Component\")\n  const [isLogin, setIsLogin] = React.useState(false)\n  console.log(\"isLogin\",isLogin)\n  const res = async () => {\n    axios.get('http://localhost:2001/').then(res => {\n      const isLogin = res.data\n      console.log(\"res.data\",res.data)\n      setIsLogin(isLogin)\n    })\n  }\n\n  return <div> {isLogin ? <Top.Component /> : <Login.Component /> }</div>\n}\n","/Users/takagiyosuke/TwitterClone/web/src/components/Tweet.tsx",["83","84","85","86"],"/Users/takagiyosuke/TwitterClone/web/src/templates/Profile.tsx",["87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":42,"column":15,"nodeType":"94","messageId":"95","endLine":42,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":66,"column":6,"nodeType":"98","endLine":66,"endColumn":8,"suggestions":"99"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"90","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"102","line":55,"column":15,"nodeType":"94","messageId":"95","endLine":55,"endColumn":23},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","replacedBy":"104"},{"ruleId":"92","severity":1,"message":"105","line":16,"column":7,"nodeType":"94","messageId":"95","endLine":16,"endColumn":16},{"ruleId":"92","severity":1,"message":"106","line":160,"column":7,"nodeType":"94","messageId":"95","endLine":160,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":11,"column":9,"nodeType":"94","messageId":"95","endLine":11,"endColumn":12},{"ruleId":"92","severity":1,"message":"93","line":23,"column":19,"nodeType":"94","messageId":"95","endLine":23,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":33,"column":19,"nodeType":"94","messageId":"95","endLine":33,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":46,"column":19,"nodeType":"94","messageId":"95","endLine":46,"endColumn":22},{"ruleId":"92","severity":1,"message":"93","line":56,"column":19,"nodeType":"94","messageId":"95","endLine":56,"endColumn":22},{"ruleId":"92","severity":1,"message":"107","line":16,"column":6,"nodeType":"94","messageId":"95","endLine":16,"endColumn":10},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["110"],["108"],["109"],"'response' is assigned a value but never used.",["108"],["109"],"'nothingDo' is assigned a value but never used.","'FollowButton' is assigned a value but never used.","'User' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [history]",{"range":"113","text":"114"},[1773,1775],"[history]"]